"""add files table

Revision ID: 96e55cd5f195
Revises: b2e4c4c6cf92
Create Date: 2024-04-20 21:43:01.238601

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op  # type: ignore

# revision identifiers, used by Alembic.
revision: str = "96e55cd5f195"
down_revision: Union[str, None] = "b2e4c4c6cf92"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Create schema if it doesn't exist
    op.execute("CREATE SCHEMA IF NOT EXISTS storage")

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "files",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("category", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("category", "name", name="unique_file"),
        schema="storage",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("files", schema="storage")
    # ### end Alembic commands ###

    # Drop schema if it exists
    op.execute("DROP SCHEMA IF EXISTS storage CASCADE")
